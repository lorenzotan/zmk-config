/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAVNUM 1
#define SYMBOL 2
#define FUNCTION 3

&mt {
        require-prior-idle-ms = <100>;
};

/ {
        behaviors {
                l_skp_wrd: l_skip_word {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LA(LEFT)>, <&kp HOME>;
                };
                r_skp_wrd: r_skip_word {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LA(RIGHT)>, <&kp END>;
                };
                num_sym: number_symbol_layers {
                        compatible = "zmk,behavior-tap-dance";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&tog NAVNUM>, <&tog SYMBOL>, <&tog FUNCTION>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |            |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |  TAB |  A  |  S  |  D  |  F  |  G  |            |  H  |  J   |  K  |  L  |  ;  |  '   |
// |  LCTRL  |  Z  |  X  |  C  |  V  |  B  |            |  N  |  M   |  ,  |  .  |  /  |      |
//                    | GUI | SPC |LSHFT|            | NUM | RET  |     |
                        bindings = <
   &kp ESC        &kp Q        &kp W          &kp E        &kp R        &kp T              &kp Y        &kp U       &kp I       &kp O        &kp P           &kp BSPC
   &kp TAB        &mt LSHFT A  &mt LCTRL S    &mt LALT D   &mt LGUI F   &kp G              &kp H        &mt RGUI J  &mt RALT K  &mt RCTRL L  &mt RSHFT SEMI  &kp SQT
   &none          &kp Z        &kp X          &kp C        &kp V        &kp B              &kp N        &kp M       &kp COMMA   &kp DOT      &kp FSLH        &none
                                              &kp LGUI     &kp SPACE    &kp LSHFT          &num_sym     &kp RET     &none
                        >;
                };
                num_layer {
// -----------------------------------------------------------------------------------------
// |   ESC |     | HOME |  UP  |  END  | PG_UP |             |  /  |  7  |  8  |  9  |  -  | BKSP  |
// |   TAB |     | LEFT | DOWN | RIGHT | PG_DN |             |  *  |  4  |  5  |  6  |  +  |       |
// | LSHFT |     |      |      |       |       |             |  .  |  1  |  2  |  3  | RET | RSHFT |
//                      | GUI  |  SPC  | LSHFT |             | NUM |  0  |     |
                        bindings = <
   &kp ESC    &none  &l_skp_wrd   &kp UP     &r_skp_wrd    &kp PG_UP      &kp SLASH   &kp N7   &kp N8  &kp N9  &kp MINUS  &kp BSPC
   &kp TAB    &none  &kp LEFT     &kp DOWN   &kp RIGHT     &kp PG_DN      &kp ASTRK   &kp N4   &kp N5  &kp N6  &kp PLUS   &none
   &kp LSHFT  &none  &none        &none      &none         &none          &kp PERIOD  &kp N1   &kp N2  &kp N3  &kp RET    &kp RSHFT
                                  &kp LGUI   &kp SPACE     &kp LSHFT      &to DEFAULT &kp N0   &none
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  `  |  !  |  @  |  #  |  $  |  %  |             |  ^  |  &  |  *  |  (  |  )  | BKSP |
// |     |     |     |     |     |     |             |  -  |  =  |     |  [  |  ]  |  \   |
// |     |     |     |     |     |     |             |  _  |  +  |     |  <  |  >  |      |
//                   | GUI | SPC |LSHFT|             | DEF | ENT | ALT |
                        bindings = <
   &kp TILDE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT         &kp CARET   &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
   &none      &none        &none        &none        &none        &none             &kp MINUS   &kp EQUAL  &none      &kp LBKT  &kp RBKT  &kp BSLH
   &none      &none        &none        &none        &none        &none             &kp UNDER   &kp PLUS   &none      &kp LBRC  &kp RBRC  &none
                                        &kp LGUI     &kp SPACE    &kp LSHFT         &to DEFAULT &kp RET    &kp RALT
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// |  F1   |  F2   |  F3   |  F4     |  F5     |  F6   |       |  F7   |  F8      |  F9      |  F10     |  F11  | F12 |
// | CMD 1 | CMD 2 | CMD 3 | CMD 4   | CMD 5   | CMD 6 |       | BTCLR | BT1      | BT2      |          |       |     |
// |       |       |       | Disp DN | Disp UP |       |       |       | MUTE     | Vol DN   | Vol UP   |       |     |
//                         | GUI     | SPC     |       |       | DEF   |          |          |
                        bindings = <
   &kp F1     &kp F2     &kp F3       &kp F4        &kp F5        &kp F6            &kp F7         &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
   &kp LG(1)  &kp LG(2)  &kp LG(3)    &kp LG(4)     &kp LG(5)     &kp LG(6)         &bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1  &none         &none         &none
   &none      &none      &none        &kp C_BRI_DN  &kp C_BRI_UP  &none             &none          &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &none         &none
                                      &kp LGUI      &kp SPACE     &kp LSHFT         &to DEFAULT    &none         &none
                        >;
                };
        };
};
